openapi: 3.0.3
info:
  title: Guess The Location
  description: Guess The Location API documentation.
  contact:
    name: API Support
    url: 'http://www.gtl.com/support'
    email: support@gtl.com
  version: 0.0.1
paths:
  /api/games/:
    get:
      description: Get the list of played games.
      responses:
        '200':
          description: OK
          content:
            application/vnd.mason+json:
              schema:
                $ref: '#/components/schemas/PlayedGames'
              examples:
                Example:
                  value:
                    '@controls':
                      self:
                        href: /api/games/
                      'gtl:add-game':
                        method: POST
                        encoding: json
                        title: Create a new game
                        href: /api/games/
                        schema:
                          $ref: '#/components/schemas/PlayedGames'
                      locations-all:
                        href: /api/locations/
                      persons-all:
                        href: /api/persons/
                      alternate:
                        description: 'Gamecollection sorted by score, in descending order'
                        href: /api/statistics/
                    items:
                      - player_name: AAA
                        score: 6354
                        timestamp: '2022-04-26T09:35:14.463278'
                        game_type: 1
                        '@controls':
                          self:
                            href: /api/games/G73a9/
                      - player_name: BBB
                        score: 250
                        timestamp: '2022-04-26T09:35:14.463278'
                        game_type: 1
                        '@controls':
                          self:
                            href: /api/games/A76L9/
      summary: ''
      tags:
        - GameCollection
      operationId: get-playedgames
    post:
      summary: ''
      operationId: post-api-games
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      description: Add new played game.
      tags:
        - GameCollection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayedGames'
  '/api/games/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - GameItem
      responses:
        '200':
          description: OK
          content:
            application/vnd.mason+json:
              schema:
                $ref: '#/components/schemas/PlayedGames'
              examples:
                Example:
                  value:
                    player_name: BBB
                    score: 2891
                    timestamp: '2022-03-15T15:12:41.988221'
                    game_type: 2
                    '@controls':
                      self:
                        href: '/api/games/{id}/'
                      collection:
                        href: /api/games/
                      gtl-delete:
                        method: Delete
                        title: Delete this game
                        href: '/api/games/{id}/'
                      edit:
                        method: PUT
                        encoding: json
                        title: Update this game
                        href: '/api/games/{id}/'
                        schema:
                          $ref: '#/components/schemas/PlayedGames'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-api-games-id
      description: Get single played game by ID.
    put:
      summary: ''
      operationId: put-api-games-id
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      description: Edit the played game by ID.
      tags:
        - GameItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayedGames'
    delete:
      summary: ''
      operationId: delete-api-games-id
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
      description: Delete single played game by ID.
      tags:
        - GameItem
  '/api/location/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/vnd.mason+json:
              schema:
                $ref: '#/components/schemas/Location'
              examples:
                Example:
                  value:
                    image_path: church.jpg
                    country_name: Russia
                    town_name: Moscow
                    person_id: 1
                    '@controls':
                      author:
                        href: '/api/persons/{id}/'
                      self:
                        href: '/api/locations/{id}/'
                      collection:
                        href: /api/locations/
                      gtl-delete:
                        method: Delete
                        title: Delete this location
                        href: '/api/locations/{id}/'
                      edit:
                        method: PUT
                        encoding: json
                        title: Update this location
                        href: '/api/locations/{id}/'
                        schema:
                          $ref: '#/components/schemas/Location'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-api-location-id
      description: Get the location by ID
      tags:
        - LocationItem
    put:
      summary: ''
      operationId: put-api-location-id
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - LocationItem
      description: Edit the location by ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
    delete:
      summary: ''
      operationId: delete-api-location-id
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - LocationItem
      description: Delete the location by ID
  /api/locations/:
    get:
      description: Get the list of locations.
      responses:
        '200':
          description: OK
          content:
            application/vnd.mason+json:
              schema:
                items:
                  $ref: '#/components/schemas/Location'
              examples:
                Example:
                  value:
                    '@controls':
                      self:
                        href: /api/locations/
                      'gtl:add-location':
                        method: POST
                        encoding: json
                        title: Create a new location
                        href: /api/games/
                        schema:
                          $ref: '#/components/schemas/Location'
                      games-all:
                        href: /api/games/
                      persons-all:
                        href: /api/persons/
                    items:
                      - image_path: lighthouse.jpg
                        country_name: Finland
                        town_name: Oulu
                        person_id: 1
                        '@controls':
                          self:
                            href: '/api/locations/{id}/'
                          author:
                            href: '/api/persons/{id}/'
                      - image_path: buildings.jpg
                        country_name: USA
                        town_name: Massachusetts
                        person_id: 1
                        '@controls':
                          self:
                            href: '/api/locations/{id}/'
                          author:
                            href: '/api/persons/{id}/'
                      - image_path: church.jpg
                        country_name: Russia
                        town_name: Moscow
                        person_id: 1
                        '@controls':
                          self:
                            href: '/api/locations/{id}/'
                          author:
                            href: '/api/persons/{id}/'
      operationId: get-locations
      summary: ''
      tags:
        - LocationCollection
    parameters: []
    post:
      summary: ''
      operationId: ''
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      description: Add new LocationItem.
      tags:
        - LocationCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
  /api/persons/:
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/vnd.mason+json:
              schema:
                $ref: '#/components/schemas/Person'
              examples:
                Example:
                  value:
                    '@controls':
                      self:
                        href: /api/persons/
                      'gtl:add-persons':
                        method: POST
                        encoding: json
                        title: Create a new person
                        href: /api/persons/
                        schema:
                          $ref: '#/components/schemas/Person'
                      locations-all:
                        href: /api/locations/
                      games-all:
                        href: /api/games/
                    items:
                      - email: thisismy@email.com
                        password: exampleofastrongpasswordthisisnt
                        locations:
                          - image_path: lighthouse.jpg
                            country_name: Finland
                            town_name: Oulu
                            person_id: 1
                            '@controls':
                              self:
                                href: /api/locations/G73a9/
                          - image_path: buildings.jpg
                            country_name: USA
                            town_name: Boston
                            person_id: 1
                            …: null
                        '@controls':
                          self:
                            href: /api/persons/G73a9/
      operationId: get-persons
      description: Get the list of persons.
      tags:
        - PersonCollection
    parameters: []
    post:
      summary: ''
      operationId: post-api-persons
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - PersonCollection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
            examples:
              Example:
                value:
                  email: string
                  password: string
  '/api/persons/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Person ID
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/vnd.mason+json:
              schema:
                $ref: '#/components/schemas/Person'
              examples:
                Example:
                  value:
                    email: thisusedtobemy@email.com
                    password: exampleofthestrongestpasswordintheworldthisisnt
                    locations: []
                    '@controls':
                      self:
                        href: '/api/persons/{id}/'
                      collection:
                        href: /api/persons/
                      gtl-delete:
                        method: Delete
                        title: Delete this person
                        href: '/api/persons/{id}/'
                      edit:
                        method: PUT
                        encoding: json
                        title: Update this person
                        href: '/api/persons/{id}/'
                        schema:
                          $ref: '#/components/schemas/Person'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-api-persons-id
      tags:
        - PersonItem
    put:
      summary: ''
      operationId: put-api-persons-id
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - PersonItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
            examples:
              example-1:
                value:
                  email: string
                  password: string
    delete:
      summary: ''
      operationId: delete-api-persons-id
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - PersonItem
  /api/statistics/:
    get:
      description: Get the sorted list of played games.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                Example:
                  value:
                    items:
                      - game_type: 1
                        player_name: AAA
                        score: 6647
                        timestamp: '2022-03-15T15:12:41.988221'
                      - game_type: 2
                        player_name: BBB
                        score: 2891
                        timestamp: '2022-03-15T15:12:41.988221'
                      - game_type: 3
                        player_name: CCC
                        score: 528
                        timestamp: '2022-03-15T15:12:41.988221'
      summary: ''
      tags:
        - Statistics
      operationId: get-api-statistics
components:
  schemas:
    Location:
      type: object
      title: Location
      x-examples:
        Example:
          image_path: buildings.jpg
          country_name: USA
          town_name: Massachusetts
          person_id: 1
      properties:
        image_path:
          type: string
        country_name:
          type: string
        town_name:
          type: string
        person_id:
          type: integer
      required:
        - image_path
        - country_name
        - town_name
        - person_id
    PlayedGames:
      title: PlayedGames
      type: object
      x-examples:
        Example:
          player_name: AAA
          score: 6647
          timestamp: '2022-03-15T15:12:41.988221'
          game_type: 1
      properties:
        player_name:
          type: string
        score:
          type: integer
        timestamp:
          type: string
          format: date-time
        game_type:
          type: integer
      required:
        - player_name
        - score
        - timestamp
        - game_type
    Person:
      title: Person
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        locations:
          type: array
          items: {}
      required:
        - email
        - password
  parameters: {}
  responses:
    BadRequest:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            Example:
              value:
                message: The browser (or proxy) sent a request that this server could not understand.
    MethodNowAllowed:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            Example:
              value:
                message: The method is not allowed for the requested URL.
    Conflict:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            Example:
              value:
                message: Already exists
    Created:
      description: Example response
      content:
        application/json:
          schema:
            nullable: true
          examples:
            Example:
              value: No content
      headers:
        Location:
          schema:
            type: string
          description: Link to the newly created resource
    UnsupportedMediaType:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            Example:
              value:
                message: The server does not support the media type transmitted in the request.
    NotFound:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            example-1:
              value:
                message: Not found by ID
    NoContent:
      description: Example response
      content:
        application/json:
          schema:
            nullable: true
          examples:
            example-1:
              value: No content
tags:
  - description: 'Implements the GameCollection resource, which is a collection of GameItems.'
    name: GameCollection
  - description: Implements the GameItem resource.
    name: GameItem
  - description: 'Implements the LocationCollection resource, which is a collection of LocationItems.'
    name: LocationCollection
  - description: Implements the LocationItem resource.
    name: LocationItem
  - description: 'Implements the PersonCollection resource, which is a collection of PersonItems.'
    name: PersonCollection
  - description: Implements the PersonItem resource.
    name: PersonItem
  - description: 'Implements the Statistic resource, which is a collection of GameItems sorted in different ways.'
    name: Statistics
